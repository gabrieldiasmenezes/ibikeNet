// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using ibikeNet.Data;

#nullable disable

namespace ibikeNet.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ibikeNet.Model.Administrador", b =>
                {
                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("NVARCHAR2(11)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("nm_adm");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<int>("PatioId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<long?>("PatioId1")
                        .HasColumnType("NUMBER(19)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Cpf");

                    b.HasIndex("PatioId1");

                    b.ToTable("administrador");
                });

            modelBuilder.Entity("ibikeNet.Model.Monitoracao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("id_monitoracao");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("data_hora");

                    b.Property<string>("MotoPlaca")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("placa_moto");

                    b.Property<int>("TipoEvento")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("tipo_evento");

                    b.HasKey("Id");

                    b.HasIndex("MotoPlaca");

                    b.ToTable("monitoracao");
                });

            modelBuilder.Entity("ibikeNet.Model.Moto", b =>
                {
                    b.Property<string>("Placa")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)");

                    b.Property<DateTime>("DataUltimoCheck")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("data_ultimo_check");

                    b.Property<double>("KmAtual")
                        .HasColumnType("BINARY_DOUBLE")
                        .HasColumnName("km_atual");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("PatioId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<long?>("PatioId1")
                        .HasColumnType("NUMBER(19)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Placa");

                    b.HasIndex("PatioId1");

                    b.ToTable("moto");
                });

            modelBuilder.Entity("ibikeNet.Model.Patio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(19)")
                        .HasColumnName("id_patio");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("Capacidade")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("nm_patio");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.ToTable("patio");
                });

            modelBuilder.Entity("ibikeNet.Model.Administrador", b =>
                {
                    b.HasOne("ibikeNet.Model.Patio", "Patio")
                        .WithMany("Administradores")
                        .HasForeignKey("PatioId1");

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("ibikeNet.Model.Monitoracao", b =>
                {
                    b.HasOne("ibikeNet.Model.Moto", "Moto")
                        .WithMany()
                        .HasForeignKey("MotoPlaca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moto");
                });

            modelBuilder.Entity("ibikeNet.Model.Moto", b =>
                {
                    b.HasOne("ibikeNet.Model.Patio", "Patio")
                        .WithMany()
                        .HasForeignKey("PatioId1");

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("ibikeNet.Model.Patio", b =>
                {
                    b.Navigation("Administradores");
                });
#pragma warning restore 612, 618
        }
    }
}
